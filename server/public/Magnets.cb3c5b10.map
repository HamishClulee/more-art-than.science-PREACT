{"version":3,"sources":["src/views/Magnets.js"],"names":["style","backgroundImage","fridge","height","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","Magnets","state","message","fetch","baseURL","encodeURIComponent","window","location","href","split","then","resp","json","setState","fin","props","map","word","Component"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAIA,QAAQ;AACRC,8BAAwBC,gBAAxB,MADQ;AAERC,YAAQ,OAFA;AAGRC,0BAAsB,OAHd;AAIRC,wBAAoB,QAJZ;AAKRC,sBAAkB,WALV;AAMRC,oBAAgB;AANR,CAAZ;;IASMC;;;AAEF,uBAAc;AAAA;;AAAA;;AAEV,cAAKC,KAAL,CAAWC,OAAX,GAAqB,EAArB;AAFU;AAGb;;;;4CAEmB;AAAA;;AAChBC,kBAASC,eAAT,yBAAoCC,mBAAmBC,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAnB,CAApC,EACKC,IADL,CACU,gBAAQ;AACV,uBAAOC,KAAKC,IAAL,EAAP;AACH,aAHL,EAIKF,IAJL,CAIU,eAAO;AACT,uBAAKG,QAAL,CAAe,EAAEX,SAASY,IAAIZ,OAAf,EAAf;AACH,aANL;AAOH;;;+BAEMa,OAAOd,OAAO;AACjB,mBAAO;AAAA;AAAA;AACH;AAAA;AAAA,sBAAK,WAAU,kBAAf,EAAkC,OAAQT,KAA1C;AACI,mCAAC,mBAAD,OADJ;AAEI;AAAA;AAAA,0BAAK,WAAU,mBAAf;AACMS,8BAAMC,OAAN,CAAcc,GAAd,CAAkB,gBAAQ;AACxB,mCAAO;AAAA;AAAA,kCAAM,WAAU,WAAhB;AAA6BC;AAA7B,6BAAP;AACH,yBAFC;AADN;AAFJ;AADG,aAAP;AAUH;;;;EA5BiBC;;kBA+BPlB","file":"Magnets.cb3c5b10.map","sourceRoot":"..","sourcesContent":["import { h, render, Component } from 'preact'\nimport Hamburger from '../components/Hamburger'\nimport baseURL from '../constants/utils'\nimport fridge from '../static/fridge.jpg'\n\nlet style = {\n    backgroundImage: `url(${fridge})`,\n    height: '100vh',\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover'\n}\n\nclass Magnets extends Component {\n\n    constructor() {\n        super()\n        this.state.message = []\n    }\n\n    componentDidMount() {\n        fetch(`${baseURL}/get-magnet?hash=${encodeURIComponent(window.location.href.split('/')[4])}`)\n            .then(resp => {\n                return resp.json()\n            })\n            .then(fin => {\n                this.setState( { message: fin.message })\n            })\n    }\n\n    render(props, state) {\n        return <div>\n            <div className=\"fridge-container\" style={ style }>\n                <Hamburger />\n                <div className=\"message-container\">\n                    { state.message.map(word => {\n                        return <span className=\"word-item\">{word}</span>\n                    }) }\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Magnets\n"]}