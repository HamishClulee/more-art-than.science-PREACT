{"version":3,"sources":["src/constants/words.js","src/views/Ipseity.js"],"names":["words","Ipseity","state","message","word","setState","filter","p","hash","generateHash","fetch","encodeURIComponent","s4","Math","floor","random","toString","substring","props","map","activateWord","removeWord","saveAndCreate","Component"],"mappings":"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","file":"Ipseity.e4746b80.map","sourceRoot":"..","sourcesContent":["const words = [\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'monkeys',\n    'attack',\n    'civilians',\n    'times',\n    'new',\n    'barometer',\n    'joshua',\n    'reddit',\n    'gonzo',\n    'drummer',\n    'daniel',\n    'tide-pod',\n    'muppet',\n    'womble',\n    'etc',\n    'do',\n    'you',\n    'even',\n    'listen',\n    'bruh'\n]\n\nexport default words","import { h, render, Component } from 'preact'\nimport Hamburger from '../components/Hamburger'\nimport { route } from 'preact-router'\n\nimport words from '../constants/words.js'\n\nclass Ipseity extends Component {\n\n    constructor() {\n        super()\n        this.state.words = words\n        this.state.message = []\n    }\n\n    // Vue mounted\n    componentDidMount() {\n\n    }\n\n    removeWord(word) {\n        this.setState({message: this.state.message.filter(function(p) {\n            return p !== word\n        })})\n    }\n\n    activateWord (word) {\n        this.setState({\n            message: [...this.state.message, word]\n        })\n    }\n\n    saveAndCreate () {\n        var hash = this.generateHash()\n\n        fetch('http://localhost:5555/set-magnet?hash=' + hash + '&message=' + encodeURIComponent(this.state.message))\n        route('/magnets/' + hash)\n    }\n\n    generateHash () {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1)\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4()\n    }\n\n    render(props, state) {\n        return <div>\n            <div className=\"blog-container\">\n                <Hamburger />\n                <div className=\"blog left-column\">\n                    <h3>Fridge</h3>\n                    <h3>Magnets</h3>\n                </div>\n                <div className=\"blog right-column\">\n                    <div className=\"words-container\">\n                        { state.words.map(word => {\n                            return <span onClick={ () => this.activateWord(word) } className=\"word-item\">{word}</span>\n                        }) }\n                    </div>\n                    <div className=\"sequence-container\">\n                        <div className=\"message-container\">\n                            { state.message.map(word => {\n                                return <span onClick={ () => this.removeWord(word) } className=\"word-item\">{word}</span>\n                            }) }\n                        </div>\n\n                        <button className=\"btn\" onclick={ () => this.saveAndCreate() }>Save and Create new link</button>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    }\n}\n\nexport default Ipseity\n"]}